'use strict';

var attributeExceptions = ["role"];

function appendText(el, text) {
  var textNode = document.createTextNode(text);
  el.appendChild(textNode);
}

function appendArray(el, children) {
  children.forEach(function (child) {
    if (Array.isArray(child)) {
      appendArray(el, child);
    } else if (child instanceof window.Element) {
      el.appendChild(child);
    } else if (typeof child === "string") {
      appendText(el, child);
    }
  });
}

function setStyles(el, styles) {
  if (!styles) {
    el.removeAttribute("styles");
    return;
  }

  Object.keys(styles).forEach(function (styleName) {
    if (styleName in el.style) {
      el.style[styleName] = styles[styleName]; // eslint-disable-line no-param-reassign
    }
  });
}

function makeElement(type, textOrPropsOrChild) {
  var el = document.createElement(type);

  if (Array.isArray(textOrPropsOrChild)) {
    appendArray(el, textOrPropsOrChild);
  } else if (textOrPropsOrChild instanceof window.Element) {
    el.appendChild(textOrPropsOrChild);
  } else if (typeof textOrPropsOrChild === "string") {
    appendText(el, textOrPropsOrChild);
  } else if (typeof textOrPropsOrChild === "object") {
    Object.keys(textOrPropsOrChild).forEach(function (propName) {
      if (propName in el || attributeExceptions.includes(propName)) {
        var value = textOrPropsOrChild[propName];

        if (propName === "style") {
          setStyles(el, value);
        } else if (value) {
          el[propName] = value;
        }
      }
    });
  }

  for (var _len = arguments.length, otherChildren = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    otherChildren[_key - 2] = arguments[_key];
  }

  if (otherChildren) appendArray(el, otherChildren);

  return el;
}
/* eslint-disable no-unused-vars */

var a = function a() {
  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return makeElement.apply(undefined, ["a"].concat(args));
};
var div = function div() {
  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    args[_key4] = arguments[_key4];
  }

  return makeElement.apply(undefined, ["div"].concat(args));
};
var h1 = function h1() {
  for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    args[_key5] = arguments[_key5];
  }

  return makeElement.apply(undefined, ["h1"].concat(args));
};
var header = function header() {
  for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  return makeElement.apply(undefined, ["header"].concat(args));
};
/* eslint-disable no-unused-vars */

var Header = function Header(props) {
  return header({ className: 'header' }, h1({ className: 'header__title' }, 'Know It All'), a({
    className: 'header__help',
    target: '_blank',
    rel: 'noopener noreferrer',
    title: 'Find out more about know it all, version ' + props.version,
    href: 'https://hackernoon.com/what-you-dont-know-about-web-development-d7d631f5d468#.ex2yp6d64'
  }, 'What is this??'));
};

var Table = function Table(props) {
  return div({ className: 'skill-table' }, props.rows);
};

var App = function App(props) {
  return div({ id: 'app' }, Header({ version: props.version }), Table({ rows: props.rows }));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvY29tcG9uZW50cy5qcyIsIi4uLy4uL3NyYy9hcHAvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXR0cmlidXRlRXhjZXB0aW9ucyA9IFtcbiAgYHJvbGVgLFxuXTtcblxuZnVuY3Rpb24gYXBwZW5kVGV4dChlbCwgdGV4dCkge1xuICBjb25zdCB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpO1xuICBlbC5hcHBlbmRDaGlsZCh0ZXh0Tm9kZSk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZEFycmF5KGVsLCBjaGlsZHJlbikge1xuICBjaGlsZHJlbi5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgYXBwZW5kQXJyYXkoZWwsIGNoaWxkKTtcbiAgICB9IGVsc2UgaWYgKGNoaWxkIGluc3RhbmNlb2Ygd2luZG93LkVsZW1lbnQpIHtcbiAgICAgIGVsLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjaGlsZCA9PT0gYHN0cmluZ2ApIHtcbiAgICAgIGFwcGVuZFRleHQoZWwsIGNoaWxkKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzZXRTdHlsZXMoZWwsIHN0eWxlcykge1xuICBpZiAoIXN0eWxlcykge1xuICAgIGVsLnJlbW92ZUF0dHJpYnV0ZShgc3R5bGVzYCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgT2JqZWN0LmtleXMoc3R5bGVzKS5mb3JFYWNoKChzdHlsZU5hbWUpID0+IHtcbiAgICBpZiAoc3R5bGVOYW1lIGluIGVsLnN0eWxlKSB7XG4gICAgICBlbC5zdHlsZVtzdHlsZU5hbWVdID0gc3R5bGVzW3N0eWxlTmFtZV07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB9IGVsc2Uge1xuICAgICAgLy9jb25zb2xlLndhcm4oYCR7c3R5bGVOYW1lfSBpcyBub3QgYSB2YWxpZCBzdHlsZSBmb3IgYSA8JHtlbC50YWdOYW1lLnRvTG93ZXJDYXNlKCl9PmApO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG1ha2VFbGVtZW50KHR5cGUsIHRleHRPclByb3BzT3JDaGlsZCwgLi4ub3RoZXJDaGlsZHJlbikge1xuICBjb25zdCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodHlwZSk7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodGV4dE9yUHJvcHNPckNoaWxkKSkge1xuICAgIGFwcGVuZEFycmF5KGVsLCB0ZXh0T3JQcm9wc09yQ2hpbGQpO1xuICB9IGVsc2UgaWYgKHRleHRPclByb3BzT3JDaGlsZCBpbnN0YW5jZW9mIHdpbmRvdy5FbGVtZW50KSB7XG4gICAgZWwuYXBwZW5kQ2hpbGQodGV4dE9yUHJvcHNPckNoaWxkKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdGV4dE9yUHJvcHNPckNoaWxkID09PSBgc3RyaW5nYCkge1xuICAgIGFwcGVuZFRleHQoZWwsIHRleHRPclByb3BzT3JDaGlsZCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHRleHRPclByb3BzT3JDaGlsZCA9PT0gYG9iamVjdGApIHtcbiAgICBPYmplY3Qua2V5cyh0ZXh0T3JQcm9wc09yQ2hpbGQpLmZvckVhY2goKHByb3BOYW1lKSA9PiB7XG4gICAgICBpZiAocHJvcE5hbWUgaW4gZWwgfHwgYXR0cmlidXRlRXhjZXB0aW9ucy5pbmNsdWRlcyhwcm9wTmFtZSkpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0ZXh0T3JQcm9wc09yQ2hpbGRbcHJvcE5hbWVdO1xuXG4gICAgICAgIGlmIChwcm9wTmFtZSA9PT0gYHN0eWxlYCkge1xuICAgICAgICAgIHNldFN0eWxlcyhlbCwgdmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgZWxbcHJvcE5hbWVdID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vY29uc29sZS53YXJuKGAke3Byb3BOYW1lfSBpcyBub3QgYSB2YWxpZCBwcm9wZXJ0eSBvZiBhIDwke3R5cGV9PmApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKG90aGVyQ2hpbGRyZW4pIGFwcGVuZEFycmF5KGVsLCBvdGhlckNoaWxkcmVuKTtcblxuICByZXR1cm4gZWw7XG59XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG5leHBvcnQgY29uc3QgYSA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgYWAsIC4uLmFyZ3MpO1xuZXhwb3J0IGNvbnN0IGJ1dHRvbiA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgYnV0dG9uYCwgLi4uYXJncyk7XG5leHBvcnQgY29uc3QgZGl2ID0gKC4uLmFyZ3MpID0+IG1ha2VFbGVtZW50KGBkaXZgLCAuLi5hcmdzKTtcbmV4cG9ydCBjb25zdCBoMSA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgaDFgLCAuLi5hcmdzKTtcbmV4cG9ydCBjb25zdCBoZWFkZXIgPSAoLi4uYXJncykgPT4gbWFrZUVsZW1lbnQoYGhlYWRlcmAsIC4uLmFyZ3MpO1xuZXhwb3J0IGNvbnN0IHAgPSAoLi4uYXJncykgPT4gbWFrZUVsZW1lbnQoYHBgLCAuLi5hcmdzKTtcbmV4cG9ydCBjb25zdCBzcGFuID0gKC4uLmFyZ3MpID0+IG1ha2VFbGVtZW50KGBzcGFuYCwgLi4uYXJncyk7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqLyIsImltcG9ydCB7aGVhZGVyLCBoMSwgYSwgZGl2fSBmcm9tICcuLi91dGlscy9jb21wb25lbnRzJ1xuXG5jb25zdCBIZWFkZXIgPSBwcm9wcyA9PiAoXG4gIGhlYWRlcih7IGNsYXNzTmFtZTogYGhlYWRlcmAgfSxcbiAgICBoMSh7IGNsYXNzTmFtZTogYGhlYWRlcl9fdGl0bGVgIH0sIGBLbm93IEl0IEFsbGApLFxuICAgIGEoXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogYGhlYWRlcl9faGVscGAsXG4gICAgICAgIHRhcmdldDogYF9ibGFua2AsXG4gICAgICAgIHJlbDogYG5vb3BlbmVyIG5vcmVmZXJyZXJgLFxuICAgICAgICB0aXRsZTogYEZpbmQgb3V0IG1vcmUgYWJvdXQga25vdyBpdCBhbGwsIHZlcnNpb24gJHtwcm9wcy52ZXJzaW9ufWAsXG4gICAgICAgIGhyZWY6IGBodHRwczovL2hhY2tlcm5vb24uY29tL3doYXQteW91LWRvbnQta25vdy1hYm91dC13ZWItZGV2ZWxvcG1lbnQtZDdkNjMxZjVkNDY4Iy5leDJ5cDZkNjRgLFxuICAgICAgfSxcbiAgICAgIGBXaGF0IGlzIHRoaXM/P2AsXG4gICAgKSxcbiAgKVxuKTtcblxuY29uc3QgVGFibGUgPSBwcm9wcyA9PiBkaXYoeyBjbGFzc05hbWU6IGBza2lsbC10YWJsZWAgfSwgcHJvcHMucm93cyk7XG5cbmNvbnN0IEFwcCA9IHByb3BzID0+IChcbiAgZGl2KHsgaWQ6IGBhcHBgIH0sXG4gICAgSGVhZGVyKHsgdmVyc2lvbjogcHJvcHMudmVyc2lvbiB9KSxcbiAgICBUYWJsZSh7IHJvd3M6IHByb3BzLnJvd3MgfSksXG4gIClcbik7XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDsiXSwibmFtZXMiOlsiYXR0cmlidXRlRXhjZXB0aW9ucyIsImFwcGVuZFRleHQiLCJlbCIsInRleHQiLCJ0ZXh0Tm9kZSIsImRvY3VtZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJhcHBlbmRDaGlsZCIsImFwcGVuZEFycmF5IiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY2hpbGQiLCJBcnJheSIsImlzQXJyYXkiLCJ3aW5kb3ciLCJFbGVtZW50Iiwic2V0U3R5bGVzIiwic3R5bGVzIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsInN0eWxlTmFtZSIsInN0eWxlIiwibWFrZUVsZW1lbnQiLCJ0eXBlIiwidGV4dE9yUHJvcHNPckNoaWxkIiwiY3JlYXRlRWxlbWVudCIsInByb3BOYW1lIiwiaW5jbHVkZXMiLCJ2YWx1ZSIsIm90aGVyQ2hpbGRyZW4iLCJhIiwiYXJncyIsImRpdiIsImgxIiwiaGVhZGVyIiwiSGVhZGVyIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJ2ZXJzaW9uIiwiVGFibGUiLCJyb3dzIiwiQXBwIiwiaWQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsc0JBQXNCLFFBQTVCOztBQUlBLFNBQVNDLFVBQVQsQ0FBb0JDLEVBQXBCLEVBQXdCQyxJQUF4QixFQUE4QjtNQUN0QkMsV0FBV0MsU0FBU0MsY0FBVCxDQUF3QkgsSUFBeEIsQ0FBakI7S0FDR0ksV0FBSCxDQUFlSCxRQUFmOzs7QUFHRixTQUFTSSxXQUFULENBQXFCTixFQUFyQixFQUF5Qk8sUUFBekIsRUFBbUM7V0FDeEJDLE9BQVQsQ0FBaUIsVUFBQ0MsS0FBRCxFQUFXO1FBQ3RCQyxNQUFNQyxPQUFOLENBQWNGLEtBQWQsQ0FBSixFQUEwQjtrQkFDWlQsRUFBWixFQUFnQlMsS0FBaEI7S0FERixNQUVPLElBQUlBLGlCQUFpQkcsT0FBT0MsT0FBNUIsRUFBcUM7U0FDdkNSLFdBQUgsQ0FBZUksS0FBZjtLQURLLE1BRUEsSUFBSSxPQUFPQSxLQUFQLGFBQUosRUFBK0I7aUJBQ3pCVCxFQUFYLEVBQWVTLEtBQWY7O0dBTko7OztBQVdGLFNBQVNLLFNBQVQsQ0FBbUJkLEVBQW5CLEVBQXVCZSxNQUF2QixFQUErQjtNQUN6QixDQUFDQSxNQUFMLEVBQWE7T0FDUkMsZUFBSDs7OztTQUlLQyxJQUFQLENBQVlGLE1BQVosRUFBb0JQLE9BQXBCLENBQTRCLFVBQUNVLFNBQUQsRUFBZTtRQUNyQ0EsYUFBYWxCLEdBQUdtQixLQUFwQixFQUEyQjtTQUN0QkEsS0FBSCxDQUFTRCxTQUFULElBQXNCSCxPQUFPRyxTQUFQLENBQXRCLENBRHlCO0tBQTNCO0dBREY7OztBQVNGLFNBQVNFLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCQyxrQkFBM0IsRUFBaUU7TUFDekR0QixLQUFLRyxTQUFTb0IsYUFBVCxDQUF1QkYsSUFBdkIsQ0FBWDs7TUFFSVgsTUFBTUMsT0FBTixDQUFjVyxrQkFBZCxDQUFKLEVBQXVDO2dCQUN6QnRCLEVBQVosRUFBZ0JzQixrQkFBaEI7R0FERixNQUVPLElBQUlBLDhCQUE4QlYsT0FBT0MsT0FBekMsRUFBa0Q7T0FDcERSLFdBQUgsQ0FBZWlCLGtCQUFmO0dBREssTUFFQSxJQUFJLE9BQU9BLGtCQUFQLGFBQUosRUFBNEM7ZUFDdEN0QixFQUFYLEVBQWVzQixrQkFBZjtHQURLLE1BRUEsSUFBSSxPQUFPQSxrQkFBUCxhQUFKLEVBQTRDO1dBQzFDTCxJQUFQLENBQVlLLGtCQUFaLEVBQWdDZCxPQUFoQyxDQUF3QyxVQUFDZ0IsUUFBRCxFQUFjO1VBQ2hEQSxZQUFZeEIsRUFBWixJQUFrQkYsb0JBQW9CMkIsUUFBcEIsQ0FBNkJELFFBQTdCLENBQXRCLEVBQThEO1lBQ3RERSxRQUFRSixtQkFBbUJFLFFBQW5CLENBQWQ7O1lBRUlBLG9CQUFKLEVBQTBCO29CQUNkeEIsRUFBVixFQUFjMEIsS0FBZDtTQURGLE1BRU8sSUFBSUEsS0FBSixFQUFXO2FBQ2JGLFFBQUgsSUFBZUUsS0FBZjs7T0FOSjtLQURGOzs7b0NBVjhDQyxhQUFlO2lCQUFBOzs7TUF5QjNEQSxhQUFKLEVBQW1CckIsWUFBWU4sRUFBWixFQUFnQjJCLGFBQWhCOztTQUVaM0IsRUFBUDs7OztBQUlGLEFBQU8sSUFBTTRCLElBQUksU0FBSkEsQ0FBSTtxQ0FBSUMsSUFBSjtRQUFBOzs7U0FBYVQsMENBQW9CUyxJQUFwQixFQUFiO0NBQVY7QUFDUCxBQUNPLElBQU1DLE1BQU0sU0FBTkEsR0FBTTtxQ0FBSUQsSUFBSjtRQUFBOzs7U0FBYVQsNENBQXNCUyxJQUF0QixFQUFiO0NBQVo7QUFDUCxBQUFPLElBQU1FLEtBQUssU0FBTEEsRUFBSztxQ0FBSUYsSUFBSjtRQUFBOzs7U0FBYVQsMkNBQXFCUyxJQUFyQixFQUFiO0NBQVg7QUFDUCxBQUFPLElBQU1HLFNBQVMsU0FBVEEsTUFBUztxQ0FBSUgsSUFBSjtRQUFBOzs7U0FBYVQsK0NBQXlCUyxJQUF6QixFQUFiO0NBQWY7QUFDUCxBQUVBOztBQ3hFQSxJQUFNSSxTQUFTLFNBQVRBLE1BQVM7U0FDYkQsT0FBTyxFQUFFRSxtQkFBRixFQUFQLEVBQ0VILEdBQUcsRUFBRUcsMEJBQUYsRUFBSCxnQkFERixFQUVFTixFQUNFOzZCQUFBO29CQUFBOzhCQUFBO3lEQUlxRE8sTUFBTUMsT0FKM0Q7O0dBREYsbUJBRkYsQ0FEYTtDQUFmOztBQWdCQSxJQUFNQyxRQUFRLFNBQVJBLEtBQVE7U0FBU1AsSUFBSSxFQUFFSSx3QkFBRixFQUFKLEVBQWtDQyxNQUFNRyxJQUF4QyxDQUFUO0NBQWQ7O0FBRUEsSUFBTUMsTUFBTSxTQUFOQSxHQUFNO1NBQ1ZULElBQUksRUFBRVUsU0FBRixFQUFKLEVBQ0VQLE9BQU8sRUFBRUcsU0FBU0QsTUFBTUMsT0FBakIsRUFBUCxDQURGLEVBRUVDLE1BQU0sRUFBRUMsTUFBTUgsTUFBTUcsSUFBZCxFQUFOLENBRkYsQ0FEVTtDQUFaOzs7OyJ9
