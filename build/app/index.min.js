(function () {
  'use strict';

  var attributeExceptions = ["role"];

  function appendText(el, text) {
    var textNode = document.createTextNode(text);
    el.appendChild(textNode);
  }

  function appendArray(el, children) {
    children.forEach(function (child) {
      if (Array.isArray(child)) {
        appendArray(el, child);
      } else if (child instanceof window.Element) {
        el.appendChild(child);
      } else if (typeof child === "string") {
        appendText(el, child);
      }
    });
  }

  function setStyles(el, styles) {
    if (!styles) {
      el.removeAttribute("styles");
      return;
    }

    Object.keys(styles).forEach(function (styleName) {
      if (styleName in el.style) {
        el.style[styleName] = styles[styleName]; // eslint-disable-line no-param-reassign
      }
    });
  }

  function makeElement(type, textOrPropsOrChild) {
    var el = document.createElement(type);

    if (Array.isArray(textOrPropsOrChild)) {
      appendArray(el, textOrPropsOrChild);
    } else if (textOrPropsOrChild instanceof window.Element) {
      el.appendChild(textOrPropsOrChild);
    } else if (typeof textOrPropsOrChild === "string") {
      appendText(el, textOrPropsOrChild);
    } else if (typeof textOrPropsOrChild === "object") {
      Object.keys(textOrPropsOrChild).forEach(function (propName) {
        if (propName in el || attributeExceptions.includes(propName)) {
          var value = textOrPropsOrChild[propName];

          if (propName === "style") {
            setStyles(el, value);
          } else if (value) {
            el[propName] = value;
          }
        }
      });
    }

    for (var _len = arguments.length, otherChildren = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      otherChildren[_key - 2] = arguments[_key];
    }

    if (otherChildren) appendArray(el, otherChildren);

    return el;
  }
  var h1 = function h1() {
    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    return makeElement.apply(undefined, ["h1"].concat(args));
  };
  /* eslint-disable no-unused-vars */

  // and then ...
  document.body.appendChild(h1({ className: "title" }, " Designer Components 2.0 "));

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGF0dHJpYnV0ZUV4Y2VwdGlvbnMgPSBbXG4gIGByb2xlYCxcbl07XG5cbmZ1bmN0aW9uIGFwcGVuZFRleHQoZWwsIHRleHQpIHtcbiAgY29uc3QgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KTtcbiAgZWwuYXBwZW5kQ2hpbGQodGV4dE5vZGUpO1xufVxuXG5mdW5jdGlvbiBhcHBlbmRBcnJheShlbCwgY2hpbGRyZW4pIHtcbiAgY2hpbGRyZW4uZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgIGFwcGVuZEFycmF5KGVsLCBjaGlsZCk7XG4gICAgfSBlbHNlIGlmIChjaGlsZCBpbnN0YW5jZW9mIHdpbmRvdy5FbGVtZW50KSB7XG4gICAgICBlbC5hcHBlbmRDaGlsZChjaGlsZCk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY2hpbGQgPT09IGBzdHJpbmdgKSB7XG4gICAgICBhcHBlbmRUZXh0KGVsLCBjaGlsZCk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc2V0U3R5bGVzKGVsLCBzdHlsZXMpIHtcbiAgaWYgKCFzdHlsZXMpIHtcbiAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoYHN0eWxlc2ApO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIE9iamVjdC5rZXlzKHN0eWxlcykuZm9yRWFjaCgoc3R5bGVOYW1lKSA9PiB7XG4gICAgaWYgKHN0eWxlTmFtZSBpbiBlbC5zdHlsZSkge1xuICAgICAgZWwuc3R5bGVbc3R5bGVOYW1lXSA9IHN0eWxlc1tzdHlsZU5hbWVdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vY29uc29sZS53YXJuKGAke3N0eWxlTmFtZX0gaXMgbm90IGEgdmFsaWQgc3R5bGUgZm9yIGEgPCR7ZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpfT5gKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBtYWtlRWxlbWVudCh0eXBlLCB0ZXh0T3JQcm9wc09yQ2hpbGQsIC4uLm90aGVyQ2hpbGRyZW4pIHtcbiAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHRleHRPclByb3BzT3JDaGlsZCkpIHtcbiAgICBhcHBlbmRBcnJheShlbCwgdGV4dE9yUHJvcHNPckNoaWxkKTtcbiAgfSBlbHNlIGlmICh0ZXh0T3JQcm9wc09yQ2hpbGQgaW5zdGFuY2VvZiB3aW5kb3cuRWxlbWVudCkge1xuICAgIGVsLmFwcGVuZENoaWxkKHRleHRPclByb3BzT3JDaGlsZCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHRleHRPclByb3BzT3JDaGlsZCA9PT0gYHN0cmluZ2ApIHtcbiAgICBhcHBlbmRUZXh0KGVsLCB0ZXh0T3JQcm9wc09yQ2hpbGQpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB0ZXh0T3JQcm9wc09yQ2hpbGQgPT09IGBvYmplY3RgKSB7XG4gICAgT2JqZWN0LmtleXModGV4dE9yUHJvcHNPckNoaWxkKS5mb3JFYWNoKChwcm9wTmFtZSkgPT4ge1xuICAgICAgaWYgKHByb3BOYW1lIGluIGVsIHx8IGF0dHJpYnV0ZUV4Y2VwdGlvbnMuaW5jbHVkZXMocHJvcE5hbWUpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGV4dE9yUHJvcHNPckNoaWxkW3Byb3BOYW1lXTtcblxuICAgICAgICBpZiAocHJvcE5hbWUgPT09IGBzdHlsZWApIHtcbiAgICAgICAgICBzZXRTdHlsZXMoZWwsIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSkge1xuICAgICAgICAgIGVsW3Byb3BOYW1lXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvL2NvbnNvbGUud2FybihgJHtwcm9wTmFtZX0gaXMgbm90IGEgdmFsaWQgcHJvcGVydHkgb2YgYSA8JHt0eXBlfT5gKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGlmIChvdGhlckNoaWxkcmVuKSBhcHBlbmRBcnJheShlbCwgb3RoZXJDaGlsZHJlbik7XG5cbiAgcmV0dXJuIGVsO1xufVxuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cblxuY29uc3QgYSA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgYWAsIC4uLmFyZ3MpO1xuY29uc3QgYnV0dG9uID0gKC4uLmFyZ3MpID0+IG1ha2VFbGVtZW50KGBidXR0b25gLCAuLi5hcmdzKTtcbmNvbnN0IGRpdiA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgZGl2YCwgLi4uYXJncyk7XG5jb25zdCBoMSA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgaDFgLCAuLi5hcmdzKTtcbmNvbnN0IGhlYWRlciA9ICguLi5hcmdzKSA9PiBtYWtlRWxlbWVudChgaGVhZGVyYCwgLi4uYXJncyk7XG5jb25zdCBwID0gKC4uLmFyZ3MpID0+IG1ha2VFbGVtZW50KGBwYCwgLi4uYXJncyk7XG5jb25zdCBzcGFuID0gKC4uLmFyZ3MpID0+IG1ha2VFbGVtZW50KGBzcGFuYCwgLi4uYXJncyk7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG5cbi8vIGFuZCB0aGVuIC4uLlxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChcbiAgaDEoXG4gICAgeyBjbGFzc05hbWU6IGB0aXRsZWAgfSxcbiAgICBgIERlc2lnbmVyIENvbXBvbmVudHMgMi4wIGAsXG4gIClcbik7Il0sIm5hbWVzIjpbImF0dHJpYnV0ZUV4Y2VwdGlvbnMiLCJhcHBlbmRUZXh0IiwiZWwiLCJ0ZXh0IiwidGV4dE5vZGUiLCJkb2N1bWVudCIsImNyZWF0ZVRleHROb2RlIiwiYXBwZW5kQ2hpbGQiLCJhcHBlbmRBcnJheSIsImNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwiQXJyYXkiLCJpc0FycmF5Iiwid2luZG93IiwiRWxlbWVudCIsInNldFN0eWxlcyIsInN0eWxlcyIsInJlbW92ZUF0dHJpYnV0ZSIsIk9iamVjdCIsImtleXMiLCJzdHlsZU5hbWUiLCJzdHlsZSIsIm1ha2VFbGVtZW50IiwidHlwZSIsInRleHRPclByb3BzT3JDaGlsZCIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wTmFtZSIsImluY2x1ZGVzIiwidmFsdWUiLCJvdGhlckNoaWxkcmVuIiwiaDEiLCJhcmdzIiwiYm9keSIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7O0VBQUEsSUFBTUEsc0JBQXNCLFFBQTVCOztFQUlBLFNBQVNDLFVBQVQsQ0FBb0JDLEVBQXBCLEVBQXdCQyxJQUF4QixFQUE4QjtFQUM1QixNQUFNQyxXQUFXQyxTQUFTQyxjQUFULENBQXdCSCxJQUF4QixDQUFqQjtFQUNBRCxLQUFHSyxXQUFILENBQWVILFFBQWY7RUFDRDs7RUFFRCxTQUFTSSxXQUFULENBQXFCTixFQUFyQixFQUF5Qk8sUUFBekIsRUFBbUM7RUFDakNBLFdBQVNDLE9BQVQsQ0FBaUIsVUFBQ0MsS0FBRCxFQUFXO0VBQzFCLFFBQUlDLE1BQU1DLE9BQU4sQ0FBY0YsS0FBZCxDQUFKLEVBQTBCO0VBQ3hCSCxrQkFBWU4sRUFBWixFQUFnQlMsS0FBaEI7RUFDRCxLQUZELE1BRU8sSUFBSUEsaUJBQWlCRyxPQUFPQyxPQUE1QixFQUFxQztFQUMxQ2IsU0FBR0ssV0FBSCxDQUFlSSxLQUFmO0VBQ0QsS0FGTSxNQUVBLElBQUksT0FBT0EsS0FBUCxhQUFKLEVBQStCO0VBQ3BDVixpQkFBV0MsRUFBWCxFQUFlUyxLQUFmO0VBQ0Q7RUFDRixHQVJEO0VBU0Q7O0VBRUQsU0FBU0ssU0FBVCxDQUFtQmQsRUFBbkIsRUFBdUJlLE1BQXZCLEVBQStCO0VBQzdCLE1BQUksQ0FBQ0EsTUFBTCxFQUFhO0VBQ1hmLE9BQUdnQixlQUFIO0VBQ0E7RUFDRDs7RUFFREMsU0FBT0MsSUFBUCxDQUFZSCxNQUFaLEVBQW9CUCxPQUFwQixDQUE0QixVQUFDVyxTQUFELEVBQWU7RUFDekMsUUFBSUEsYUFBYW5CLEdBQUdvQixLQUFwQixFQUEyQjtFQUN6QnBCLFNBQUdvQixLQUFILENBQVNELFNBQVQsSUFBc0JKLE9BQU9JLFNBQVAsQ0FBdEIsQ0FEeUI7RUFFMUIsS0FGRDtFQUtELEdBTkQ7RUFPRDs7RUFFRCxTQUFTRSxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsa0JBQTNCLEVBQWlFO0VBQy9ELE1BQU12QixLQUFLRyxTQUFTcUIsYUFBVCxDQUF1QkYsSUFBdkIsQ0FBWDs7RUFFQSxNQUFJWixNQUFNQyxPQUFOLENBQWNZLGtCQUFkLENBQUosRUFBdUM7RUFDckNqQixnQkFBWU4sRUFBWixFQUFnQnVCLGtCQUFoQjtFQUNELEdBRkQsTUFFTyxJQUFJQSw4QkFBOEJYLE9BQU9DLE9BQXpDLEVBQWtEO0VBQ3ZEYixPQUFHSyxXQUFILENBQWVrQixrQkFBZjtFQUNELEdBRk0sTUFFQSxJQUFJLE9BQU9BLGtCQUFQLGFBQUosRUFBNEM7RUFDakR4QixlQUFXQyxFQUFYLEVBQWV1QixrQkFBZjtFQUNELEdBRk0sTUFFQSxJQUFJLE9BQU9BLGtCQUFQLGFBQUosRUFBNEM7RUFDakROLFdBQU9DLElBQVAsQ0FBWUssa0JBQVosRUFBZ0NmLE9BQWhDLENBQXdDLFVBQUNpQixRQUFELEVBQWM7RUFDcEQsVUFBSUEsWUFBWXpCLEVBQVosSUFBa0JGLG9CQUFvQjRCLFFBQXBCLENBQTZCRCxRQUE3QixDQUF0QixFQUE4RDtFQUM1RCxZQUFNRSxRQUFRSixtQkFBbUJFLFFBQW5CLENBQWQ7O0VBRUEsWUFBSUEsb0JBQUosRUFBMEI7RUFDeEJYLG9CQUFVZCxFQUFWLEVBQWMyQixLQUFkO0VBQ0QsU0FGRCxNQUVPLElBQUlBLEtBQUosRUFBVztFQUNoQjNCLGFBQUd5QixRQUFILElBQWVFLEtBQWY7RUFDRDtFQUNGLE9BUkQ7RUFXRCxLQVpEO0VBYUQ7O0VBdkI4RCxvQ0FBZkMsYUFBZTtFQUFmQSxpQkFBZTtFQUFBOztFQXlCL0QsTUFBSUEsYUFBSixFQUFtQnRCLFlBQVlOLEVBQVosRUFBZ0I0QixhQUFoQjs7RUFFbkIsU0FBTzVCLEVBQVA7RUFDRDtBQUNELEVBS0EsSUFBTTZCLEtBQUssU0FBTEEsRUFBSztFQUFBLHFDQUFJQyxJQUFKO0VBQUlBLFFBQUo7RUFBQTs7RUFBQSxTQUFhVCwyQ0FBcUJTLElBQXJCLEVBQWI7RUFBQSxDQUFYO0FBQ0EsRUFHQTs7RUFHQTtFQUNBM0IsU0FBUzRCLElBQVQsQ0FBYzFCLFdBQWQsQ0FDRXdCLEdBQ0UsRUFBRUcsa0JBQUYsRUFERiw4QkFERjs7OzsifQ==
